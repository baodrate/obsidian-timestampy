name: Stage release

on:
  workflow_call:
    inputs:
      beta:
        type: boolean
        description: "Make beta release"
        default: false
    outputs:
      release_created:
        description: "`true` if a root component release was created, `false` otherwise"
        value: ${{ jobs.release-please.outputs.release_created }}
      release_tag:
        description: "Tag of the created release"
        value: ${{ jobs.release-please.outputs.tag_name }}
      release_url:
        description: "URL of the created release"
        value: ${{ jobs.release-please.outputs.html_url }}
      pr:
        description: "A JSON string of the PullRequest object (unset if no release created)"
        value: ${{ jobs.release-please.outputs.pr }}

  workflow_dispatch:
    inputs:
      beta:
        type: boolean
        description: "Make beta release"
        default: false

permissions:
  contents: write
  pull-requests: write

env:
    CHANGELOG_FILE: "CHANGELOG.md"
    CHANGELOG_FILE_BETA: "CHANGELOG-beta.md"
    VERSIONS_FILE: "versions.json"
    RELEASE_PLEASE_CONFIG_FILE: ${{ inputs.beta && 'release-please-config-beta.json' || 'release-please-config.json' }}
    RELEASE_PLEASE_MANIFEST_FILE: ${{ inputs.beta && '.release-please-manifest-beta.json' || '.release-please-manifest.json' }}

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      upload_url: ${{ steps.release.outputs.upload_url }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      html_url: ${{ steps.release.outputs.html_url }}
      pr: ${{ steps.release.outputs.pr }}
    steps:
      - name: Create release
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: ${{ env.RELEASE_PLEASE_CONFIG_FILE }}
          manifest-file: ${{ env.RELEASE_PLEASE_MANIFEST_FILE }}

  artifacts:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.release-please.outputs.tag_name }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Build plugin
        run: |
          pnpm install
          # run version-bump script before manifest.json is copied to dist/ in build step
          pnpm run version
          pnpm run build

      - name: Upload release artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ needs.release-please.outputs.tag_name }}
        run: gh release upload ${{ env.TAG_NAME }} ./dist/main.js ./dist/manifest.json ./dist/styles.css

      # obsidian expects release title to be same as tag; see: https://github.com/TfTHacker/obsidian42-brat/blob/main/BRAT-DEVELOPER-GUIDE.md
      - name: Rename release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ needs.release-please.outputs.tag_name }}
        run: |
          gh release edit "${{ env.TAG_NAME }}" --title="${{ env.TAG_NAME }}"
