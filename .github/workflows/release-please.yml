on:
    workflow_dispatch:

    push:
        branches:
            - main

permissions:
    contents: write
    pull-requests: write

name: release-please

jobs:
    release-please:
        runs-on: ubuntu-latest
        env:
            release_please_token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
        outputs:
            release_created: ${{ steps.release.outputs.release_created }}
            upload_url: ${{ steps.release.outputs.upload_url }}
            tag_name: ${{ steps.release.outputs.tag_name }}
            pr: ${{ steps.release.outputs.pr }}
        steps:
          - name: Missing token
            if: ${{ !env.release_please_token }}
            run: |
                printf \
                    '::warning title=%s::%s\n' \
                    'the secret "RELEASE_PLEASE_TOKEN" has not been made' \
                    'falling back to "GITHUB_TOKEN" (go to "settings > secrets > actions" to create RELEASE_PLEASE_TOKEN)'

          - name: Create release
            id: release
            uses: googleapis/release-please-action@v4
            with:
                token: ${{ secrets.RELEASE_PLEASE_TOKEN || github.token }}
                config-file: release-please-config.json
                manifest-file: .release-please-manifest.json

    version-bump:
        runs-on: ubuntu-latest
        needs: release-please
        if: ${{ !needs.release-please.outputs.release_created && needs.release-please.outputs.pr }}
        steps:
          - uses: actions/checkout@v4

          - name: Use Node.js
            uses: actions/setup-node@v4
            with:
                node-version: 18

          - name: Bump version
            env:
                GITHUB_TOKEN: ${{ github.token }}
                PR_NUMBER: ${{ fromJSON(needs.release-please.outputs.pr).number }}
                PR_BRANCH: ${{ fromJSON(needs.release-please.outputs.pr).headBranchName }}
                FILE_TO_COMMIT: "versions.json"

            run: |
                gh pr checkout "${PR_NUMBER}"

                # `git add ...` in `version` script requires git user configured; it won't actually be used
                git config --local user.name "${GITHUB_ACTOR}"
                git config --local user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
                npm run version

                SHA=$(gh api "/repos/{owner}/{repo}/contents/${FILE_TO_COMMIT:?}" --jq .sha)
                CONTENT=$(base64 -i "${FILE_TO_COMMIT}")
                git add "${FILE_TO_COMMIT}" && git diff --staged --quiet ||
                    gh api --method PUT "/repos/{owner}/{repo}/contents/${FILE_TO_COMMIT}" \
                        --field message="chore: bump ${FILE_TO_COMMIT}" \
                        --field content="${CONTENT:?}" \
                        --field branch="${PR_BRANCH}" \
                        --field sha="${SHA:?}"
                git stash
                git pull
                gh pr merge --disable-auto --squash "${PR_NUMBER}"

    upload-build:
        runs-on: ubuntu-latest
        needs: release-please
        if: ${{ needs.release-please.outputs.release_created }}
        steps:
          - uses: actions/checkout@v4
            with:
                ref: ${{ needs.release-please.outputs.tag_name }}

          - name: Use Node.js
            uses: actions/setup-node@v4
            with:
                node-version: 18

          - name: Build plugin
            run: |
                npm install
                npm run build

          - name: Upload release artifacts
            env:
                GITHUB_TOKEN: ${{ github.token }}
                TAG_NAME: ${{ needs.release-please.outputs.tag_name }}
            run: gh release upload ${{ env.TAG_NAME }} ./main.js ./manifest.json ./styles.css
